apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

android {
    namespace 'com.ivanalvarado.template'
    compileSdkVersion 35
    defaultConfig {
        applicationId "com.ivanalvarado.template"
        minSdkVersion 22
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}

repositories {
    mavenCentral()
    google()
    jcenter()
}

kapt {
    correctErrorTypes = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation libs.appcompat
    implementation libs.core.ktx
    implementation libs.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.runner
    androidTestImplementation libs.espresso.core

    // CardView
    implementation libs.cardview

    // Dagger - https://github.com/google/dagger
    implementation libs.dagger
    kapt libs.dagger.compiler

    // Dagger Android - https://developer.android.com/training/dependency-injection/dagger-android
    implementation libs.dagger.android
    implementation libs.dagger.android.support
    kapt libs.dagger.android.processor

    // Dagger AssistedInject - https://github.com/square/AssistedInject
    compileOnly libs.assisted.inject.annotations.dagger2
    kapt libs.assisted.inject.processor.dagger2

    // Epoxy - https://github.com/airbnb/epoxy
    implementation libs.airbnb.epoxy
    kapt libs.airbnb.epoxy.processor

    // Lottie - https://airbnb.io/lottie/#/README
    implementation libs.airbnb.lottie

    // Mockito
    testImplementation libs.mockito.core

    // MockWebServer
    testImplementation libs.okhttp3.mockwebserver

    // MvRx
    implementation libs.airbnb.mvrx

    // Kotlin Coroutines
    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.android

    // OkHttp - https://square.github.io/okhttp/
    implementation libs.okhttp3.okhttp
    implementation libs.okhttp3.logging.interceptor
    implementation libs.conscrypt.android

    // Retrofit - https://square.github.io/retrofit/
    implementation libs.retrofit
    implementation libs.retrofit.adapter.rxjava2
    implementation libs.retrofit.converter.gson

    // Room - https://developer.android.com/training/data-storage/room/index.html
    implementation libs.androidx.room.runtime
    implementation libs.androidx.room.rxjava2
    kapt libs.androidx.room.compiler

    // RxBinding - https://github.com/JakeWharton/RxBinding
    implementation libs.rxbinding
    implementation libs.rxbinding.appcompat
    implementation libs.rxbinding.core

    // RxJava - https://github.com/ReactiveX/RxJava
    implementation libs.rxjava

    // RxKotlin - https://github.com/ReactiveX/RxKotlin
    implementation libs.rxkotlin

    implementation libs.androidx.activity.ktx
    implementation libs.androidx.fragment.ktx

    testImplementation libs.truth
}
